// @use 'sass:map';
@use '@angular/material' as mat;

@include mat.core();

// $light-primary: mat.define-palette(mat.$blue-grey-palette, 500);
// $light-accent: mat.define-palette(mat.$green-palette, A200, A100, A400);

$dark-primary: mat.define-palette(mat.$light-blue-palette, A100);
$dark-accent: mat.define-palette(mat.$green-palette, A200, A100, A400);

// The "warn" palette is optional and defaults to red if not specified.
$my-warn: mat.define-palette(mat.$red-palette);

// The less themes you define, the less css it generates !
// $light-theme: mat.define-light-theme((color: (primary: $light-primary,
//         accent: $light-accent,
//         warn: $my-warn,
//       ),
//       typography: mat.define-typography-config(),
//       density: 0,
//     ));

// @debug $light-theme;

$dark-theme: mat.define-dark-theme((color: (primary: $dark-primary,
        accent: $dark-accent,
        warn: $my-warn,
      ),
      typography: mat.define-typography-config(),
      density: 0,
    ));

// Apply the dark theme by default
//
// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($dark-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($dark-theme);
// Include the theme mixins for other components you use here.
@include mat.fab-theme($dark-theme);
@include mat.icon-theme($dark-theme);
@include mat.icon-button-theme($dark-theme);
@include mat.input-theme($dark-theme);
@include mat.form-field-theme($dark-theme);
@include mat.select-theme($dark-theme);
@include mat.tooltip-theme($dark-theme);
// As an alternative, to listing every component that your application uses :
// These mixins behave the same as individual component mixins, except they emit styles for core-theme and all 35+ components in Angular Material. Unless your application uses every single component, this will produce unnecessary CSS.
// @include mat.all-component-themes($my-theme); => lead to 84.74 kB of css, specifying only components used makes it 32 kB !

// Apply the light theme only when the user prefers light themes.
// @media (prefers-color-scheme: light) {
//   // Use the `-color` mixins to only apply color styles without reapplying the same
//   // typography and density styles.
//   @include mat.core-color($light-theme);
//   @include mat.button-color($light-theme);
//   @include mat.fab-color($light-theme);
//   @include mat.icon-color($light-theme);
//   @include mat.icon-button-color($light-theme);
//   @include mat.input-color($light-theme);
//   @include mat.form-field-color($light-theme);
//   @include mat.select-color($light-theme);
//   @include mat.tooltip-color($light-theme);
// }